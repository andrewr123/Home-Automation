<VisualMicro>
  <Program Name="Boiler_control" Ext=".ino" Location="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Boiler_control">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" IsGdb="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" ExportWebDebugger="0" BuildPath="C:\Users\andre\AppData\Local\Temp\VMBuilds\Boiler_control\Optiboot_optiboot28_atmega328p\Debug" SketchName="Boiler_control" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DBT_HARDWARESERIAL 0;VM_DBT_SOFTWARESERIAL 1;VM_DBT_FASTSERIAL 2;VM_DBT_USB 3;VM_DBT_TEENSY 4;VM_DBT_UART 5;VM_DBT_USART 6;VM_DBT_USBSERIAL 7;VM_DBT_TTYUART 8;VM_DBT_NET_CONSOLE 9;VM_DBT_Uart 10;VM_DBT_COSA 11;VM_DBT_CDCSerialClass 12;VM_DBT_HARDWARESERIAL1 13;VM_DBT_HARDWARESERIAL2 14;VM_DBT_HARDWARESERIAL3 15;VM_DBT_NET_UDP 16;VM_DBT_USBAPI 17;VM_DBT_SERIALUSB 18;VM_DBT_MS430_SERIAL_ 19;VM_DBT_NO_SERIAL 20;VM_DBT_GENERIC_OBJECT 21;VM_DEBUG_ENABLE 1;VM_DEBUG;VM_DEBUG_BANDWIDTH_THROTTLE_MS 50;VM_DEBUGGER_SOFT_TRANSPORT Serial;VM_DEBUGGER_SOFT_TRANSPORT_WRITER Serial;VM_DBT VM_DBT_GENERIC_OBJECT;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Platform="avr" Architecture="7.3.0-atmel3.6.1-arduino7" Package="Optiboot">
      <Board CoreFolder="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\cores\arduino" VariantFullPath="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\variants\standard" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\andre\OneDrive\Documents\Arduino" name="ATmega328p (Optiboot on 28-pin cpus)" upload.tool="arduino:avrdude" upload.protocol="arduino" upload.speed="115200" bootloader.tool="arduino:avrdude" bootloader.low_fuses="0xF7" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x2F" build.f_cpu="16000000L" menu.mhz.16MHz="16MHz" menu.mhz.16MHz.upload.speed="115200" menu.mhz.8MHz="8MHz (int)" menu.mhz.8MHz.build.f_cpu="8000000L" menu.mhz.8MHz.bootloader.low_fuses="0xE2" menu.mhz.8MHz.upload.speed="57600" menu.mhz.1MHz="1MHz (int)" menu.mhz.1MHz.build.f_cpu="1000000L" menu.mhz.1MHz.bootloader.low_fuses="0x62" menu.mhz.1MHz.upload.speed="9600" build.board="AVR_UNO" build.core="arduino:arduino" build.variant="arduino:standard" menu.cpu.atmega328p="ATmega328p" menu.cpu.atmega328p.upload.maximum_size="32256" menu.cpu.atmega328p.upload.maximum_data_size="2048" menu.cpu.atmega328p.bootloader.high_fuses="0xDE" menu.cpu.atmega328p.bootloader.extended_fuses="0x05" menu.cpu.atmega328p.bootloader.file="optiboot/optiboot_atmega328.hex" menu.cpu.atmega328p.build.mcu="atmega328p" menu.cpu.atmega328="ATmega328" menu.cpu.atmega328.upload.maximum_size="32256" menu.cpu.atmega328.upload.maximum_data_size="2048" menu.cpu.atmega328.bootloader.high_fuses="0xDE" menu.cpu.atmega328.bootloader.extended_fuses="0x05" menu.cpu.atmega328.bootloader.file="optiboot/optiboot_atmega328.hex" menu.cpu.atmega328.build.mcu="atmega328p" menu.cpu.atmega168="ATmega168" menu.cpu.atmega168.upload.maximum_size="15872" menu.cpu.atmega168.upload.maximum_data_size="1024" menu.cpu.atmega168.bootloader.high_fuses="0xDD" menu.cpu.atmega168.bootloader.extended_fuses="0xFC" menu.cpu.atmega168.bootloader.file="optiboot/optiboot_atmega168.hex" menu.cpu.atmega168.build.mcu="atmega168" menu.cpu.atmega168p="ATmega168p" menu.cpu.atmega168p.upload.maximum_size="15872" menu.cpu.atmega168p.upload.maximum_data_size="1024" menu.cpu.atmega168p.bootloader.high_fuses="0xDD" menu.cpu.atmega168p.bootloader.extended_fuses="0xFC" menu.cpu.atmega168p.bootloader.file="optiboot/optiboot_atmega168.hex" menu.cpu.atmega168p.build.mcu="atmega168p" menu.cpu.atmega8="ATmega8" menu.cpu.atmega8.upload.maximum_size="7680" menu.cpu.atmega8.upload.maximum_data_size="1024" menu.cpu.atmega8.bootloader.high_fuses="0xCC" menu.cpu.atmega8.bootloader.low_fuses="0xBF" menu.cpu.atmega8.bootloader.file="optiboot/optiboot_atmega8.hex" menu.cpu.atmega8.build.mcu="atmega8" menu.cpu.atmega88="ATmega88" menu.cpu.atmega88.upload.maximum_size="7680" menu.cpu.atmega88.upload.maximum_data_size="1024" menu.cpu.atmega88.bootloader.high_fuses="0xDD" menu.cpu.atmega88.bootloader.extended_fuses="0xFC" menu.cpu.atmega88.bootloader.file="optiboot/optiboot_atmega88.hex" menu.cpu.atmega88.build.mcu="atmega88p" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\andre\AppData\Local\arduino15\packages\Optiboot\hardware\avr\0.8.0\system" runtime.ide.version="108013" target_package="Optiboot" target_platform="avr" runtime.hardware.path="C:\Users\andre\AppData\Local\arduino15\packages\Optiboot\hardware\avr" originalid="optiboot28" intellisense.tools.path="{runtime.tools.avr-gcc.path}\" intellisense.include.paths="{intellisense.tools.path}\lib\gcc\avr\7.3.0\include;{intellisense.tools.path}avr\include;{intellisense.tools.path}\lib\gcc\avr\7.3.0\include;{intellisense.tools.path}avr\include-fixed;{intellisense.tools.path}avr\include\avr;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include;{vm.intellisense.add-paths}" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}&quot;" ide.compiler_flags_no_opt="-Og" tools.gdbstub.cmd="avr-gdb.exe" tools.gdbstub.path="{runtime.tools.avr-gcc.path}/bin" tools.gdbstub.debug.args="&quot;{{{build.path}/{build.project_name}.elf}}&quot; -ex &quot;target remote \\.\{serial.debug.port}&quot;" tools.gdbstub.showLocalSerialPort="true" debug_menu.hwdebugger.gdbstub="GDB Stub" debug_menu.hwdebugger.gdbstub.debug.tool="gdbstub" meta_gdbstub.sentence="This debugger requires the avr-debugger library (by Jan Dolinay) be included in the project (install via Library Manager or from GitHub)." meta_gdbstub.comment="To use this debugger, install 'avr-debugger' library, add 1) '#include &lt;avr8-stub.h&gt;'  2) add 'debug_init();' to the 'setup()', and add 'breakpoint();' to the top of 'loop()'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to 'No Project', 'No Project + Libraries' or 'None' when debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_gdbstub.image.connect="https://www.visualmicro.com/pics/Debug-Help-Uno_USBOnly.png" meta_gdbstub.image.operation="https://www.visualmicro.com/pics/Debug-Break-Uno-GDBStub-VSOnly.png" meta_gdbstub.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" version="8.0" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects" compiler.c.elf.flags="{compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -flto -MMD" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto" compiler.ar.cmd="avr-gcc-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.libraries.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} {compiler.ldflags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} {compiler.libraries.ldflags} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.network_cmd="{runtime.tools.arduinoOTA.path}/bin/arduinoOTA" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.verify="" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} &quot;-P{serial.port}&quot; -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.verify="" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" tools.avrdude.upload.network_pattern="&quot;{network_cmd}&quot; -address {serial.port} -port {upload.network.port} -sketch &quot;{build.path}/{build.project_name}.hex&quot; -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}" build.usb_manufacturer="&quot;Unknown&quot;" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" upload.verify="" tools.vmopenocd.cmd="bin/openocd.exe" tools.vmopenocd.cmd.windows="bin/openocd.exe" tools.vmopenocd.debug.params.verbose="-d2" tools.vmopenocd.debug.params.quiet="-d0" tools.vmopenocd.debug.address="localhost:3333" tools.vmopenocd.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.vmopenocd.scriptPath="-s &quot;{path}/scripts/&quot;" tools.vmopenocd.logging="-l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot;" tools.vmopenocd.boardCmd="" tools.vmopenocd.targetCmd="" tools.vmopenocd.initCmd="" tools.vmopenocd.debug.pattern="&quot;{path}/{cmd}&quot; {debug.verbose} {logging} {scriptPath} {boardCmd} {targetCmd} {initCmd}" tools.vmopenocd.program.cmd="bin/openocd.exe" tools.vmopenocd.program.cmd.windows="bin/openocd.exe" tools.vmopenocd.program.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.vmopenocd.program.address="localhost:3333" tools.vmopenocd.program.params.verbose="-d2" tools.vmopenocd.program.params.quiet="-d0" tools.vmopenocd.program.elf.message="****[vMicro]**** Uploading ELF :" tools.vmopenocd.program.pattern="&quot;{path}/{cmd}&quot; {program.verbose} {scriptPath} {boardCmd} {targetCmd} -c &quot;echo -n {{program.elf.message}}&quot; {programCmd}" tools.atmelICE.protocol="" tools.atmelICE.debug.cmd="arm-none-eabi-gdb.exe" tools.atmelICE.debug.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.atmelICE.debug.pattern="&quot;{path}/{cmd}&quot;" tools.atmelICE.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.atmelICE.server.initCmd="-c &quot;init&quot;" tools.atmelICE.server.boardCmd="-c &quot;adapter driver cmsis-dap&quot; -c &quot;cmsis_dap_vid_pid 0x03eb 0x2141&quot;" tools.atmelICE.server.tool="vmopenocd" tools.atmelICE.program.scriptPath="-s &quot;{program.path}/scripts/&quot;" tools.atmelICE.program.boardCmd="-c &quot;adapter driver cmsis-dap&quot; -c &quot;cmsis_dap_vid_pid 0x03eb 0x2141&quot;" tools.atmelICE.program.cmd="bin/openocd.exe" tools.atmelICE.program.cmd.windows="bin/openocd.exe" tools.atmelICE.program.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.atmelICE.program.address="localhost:3333" tools.atmelICE.program.params.verbose="-d2" tools.atmelICE.program.params.quiet="-d0" tools.atmelICE.program.elf.message="****[vMicro]**** Uploading ELF :" tools.atmelICE.program.pattern="&quot;{program.path}/{program.cmd}&quot; {program.verbose} {program.scriptPath} {program.boardCmd} {program.targetCmd} -c &quot;echo -n {{program.elf.message}}&quot; {program.programCmd}" tools.atmelICE.program.extra_params="" tools.atmelICE.program.protocol="" tools.atmelICE.erase.params.verbose="-d3" tools.atmelICE.erase.params.quiet="-d0" tools.atmelICE.erase.pattern="" tools.jlink.cmd="arm-none-eabi-gdb.exe" tools.jlink.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.jlink.pattern="&quot;{path}/{cmd}&quot;" tools.jlink.server.tool="vmopenocd" tools.jlink.server.boardCmd="-f &quot;interface/jlink.cfg&quot;" tools.jlink.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.jlink.server.initCmd="-c &quot;init&quot;" tools.jlink.program.scriptPath="-s &quot;{program.path}/scripts/&quot;" tools.jlink.program.boardCmd="-f &quot;interface/jlink.cfg&quot;" tools.jlink.program.cmd="bin/openocd.exe" tools.jlink.program.cmd.windows="bin/openocd.exe" tools.jlink.program.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.jlink.program.address="localhost:3333" tools.jlink.program.params.verbose="-d2" tools.jlink.program.params.quiet="-d0" tools.jlink.program.elf.message="****[vMicro]**** Uploading ELF :" tools.jlink.program.pattern="&quot;{program.path}/{program.cmd}&quot; {program.verbose} {program.scriptPath} {program.boardCmd} {program.targetCmd} -c &quot;echo -n {{program.elf.message}}&quot; {program.programCmd}" tools.jlink.upload.scriptPath="-s &quot;{upload.path}/scripts/&quot;" tools.jlink.upload.boardCmd="-f &quot;interface/jlink.cfg&quot;" tools.jlink.upload.cmd="bin/openocd.exe" tools.jlink.upload.cmd.windows="bin/openocd.exe" tools.jlink.upload.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.jlink.upload.address="localhost:3333" tools.jlink.upload.params.verbose="-d2" tools.jlink.upload.params.quiet="-d0" tools.jlink.upload.elf.message="****[vMicro]**** Uploading ELF :" tools.jlink.upload.pattern="&quot;{upload.path}/{upload.cmd}&quot; {upload.verbose} {upload.scriptPath} {upload.boardCmd} {upload.targetCmd} -c &quot;echo -n {{upload.elf.message}}&quot; {upload.programCmd}" tools.bmp_upload.cmd="arm-none-eabi-gdb.exe" tools.bmp_upload.debug.path="{runtime.tools.arm-none-eabi-gcc.path}/bin/" tools.bmp_upload.program.cmd="bin/arm-none-eabi-gdb.exe" tools.bmp_upload.program.cmd.windows="bin/arm-none-eabi-gdb.exe" tools.bmp_upload.program.path="{runtime.tools.arm-none-eabi-gcc.path}" tools.bmp_upload.upload.cmd="bin/arm-none-eabi-gdb.exe" tools.bmp_upload.upload.cmd.windows="bin/arm-none-eabi-gdb.exe" tools.bmp_upload.upload.path="{runtime.tools.arm-none-eabi-gcc.path}" tools.bmp_upload.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.bmp_upload.server.initCmd="-c &quot;init&quot;" tools.bmp_upload.showLocalSerialPort="true" tools.stlinkv2.description="" tools.stlinkv2.cmd="arm-none-eabi-gdb.exe" tools.stlinkv2.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.stlinkv2.pattern="&quot;{path}/{cmd}&quot;" tools.stlinkv2.server.tool="vmopenocd" tools.stlinkv2.server.boardCmd="-f &quot;interface/stlink.cfg&quot;" tools.stlinkv2.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.stlinkv2.server.initCmd="-c &quot;init&quot;" tools.stlinkv2.upload.scriptPath="-s &quot;{upload.path}/scripts/&quot;" tools.stlinkv2.upload.boardCmd="-f &quot;interface/stlink.cfg&quot;" tools.stlinkv2.upload.cmd="bin/openocd.exe" tools.stlinkv2.upload.cmd.windows="bin/openocd.exe" tools.stlinkv2.upload.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.stlinkv2.upload.address="localhost:3333" tools.stlinkv2.upload.params.verbose="-d2" tools.stlinkv2.upload.params.quiet="-d0" tools.stlinkv2.upload.elf.message="****[vMicro]**** Uploading ELF :" tools.stlinkv2.upload.pattern="&quot;{upload.path}/{upload.cmd}&quot; {upload.verbose} {upload.scriptPath} {upload.boardCmd} {upload.targetCmd} -c &quot;echo -n {{upload.elf.message}}&quot; {upload.programCmd}" tools.stlinkv2.upload.extra_params="" tools.stlinkv2.upload.protocol="" tools.stlinkv2.protocol="" tools.f2232mm.cmd="arm-none-eabi-gdb.exe" tools.f2232mm.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.f2232mm.pattern="&quot;{path}/{cmd}&quot; {args}" tools.f2232mm.server.tool="vmopenocd" tools.f2232mm.server.boardCmd="-f &quot;interface/ftdi/minimodule.cfg&quot;" tools.f2232mm.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.f2232mm.server.initCmd="-c &quot;init&quot;" tools.f2232mm.upload.scriptPath="-s &quot;{upload.path}/scripts/&quot;" tools.f2232mm.upload.boardCmd="-f &quot;interface/ftdi/minimodule.cfg&quot;" tools.f2232mm.upload.cmd="bin/openocd.exe" tools.f2232mm.upload.cmd.windows="bin/openocd.exe" tools.f2232mm.upload.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.f2232mm.upload.address="localhost:3333" tools.f2232mm.upload.params.verbose="-d2" tools.f2232mm.upload.params.quiet="-d0" tools.f2232mm.upload.elf.message="****[vMicro]**** Uploading ELF :" tools.f2232mm.upload.pattern="&quot;{upload.path}/{upload.cmd}&quot; {upload.verbose} {upload.scriptPath} {upload.boardCmd} {upload.targetCmd} -c &quot;echo -n {{upload.elf.message}}&quot; {upload.programCmd}" tools.f2232mm.upload.extra_params="" tools.f2232mm.upload.protocol="" tools.f2232mm.protocol="" tools.f2232h.server.boardCmd="-f &quot;interface/ftdi/minimodule-lowcost.cfg&quot;" tools.f2232h.cmd="arm-none-eabi-gdb.exe" tools.f2232h.path="{runtime.tools.arm-none-eabi-gcc.path}/bin" tools.f2232h.pattern="&quot;{path}/{cmd}&quot;" tools.f2232h.server.tool="vmopenocd" tools.f2232h.server.initCmd="-c &quot;init; reset halt&quot;" vs-cmd.Debug.AttachtoProcess.tools.f2232h.server.initCmd="-c &quot;init&quot;" tools.f2232h.upload.scriptPath="-s &quot;{upload.path}/scripts/&quot;" tools.f2232h.upload.boardCmd="-f &quot;interface/ftdi/minimodule-lowcost.cfg&quot;" tools.f2232h.upload.cmd="bin/openocd.exe" tools.f2232h.upload.cmd.windows="bin/openocd.exe" tools.f2232h.upload.path="{runtime.tools.openocd-0.10.0.20200213.path}" tools.f2232h.upload.address="localhost:3333" tools.f2232h.upload.params.verbose="-d2" tools.f2232h.upload.params.quiet="-d0" tools.f2232h.upload.elf.message="****[vMicro]**** Uploading ELF :" tools.f2232h.upload.pattern="&quot;{upload.path}/{upload.cmd}&quot; {upload.verbose} {upload.scriptPath} {upload.boardCmd} {upload.targetCmd} -c &quot;echo -n {{upload.elf.message}}&quot; {upload.programCmd}" tools.f2232h.upload.extra_params="" tools.f2232h.upload.protocol="" tools.f2232h.protocol="" vm.platform.root.path="c:\program files (x86)\microsoft visual studio\2019\community\common7\ide\extensions\ze3s3dil.pco\Micro Platforms\arduino16x" avrisp.name="AVR ISP" avrisp.communication="serial" avrisp.protocol="stk500v1" avrisp.program.protocol="stk500v1" avrisp.program.tool="avrdude" avrisp.program.extra_params="-P{serial.port}" avrispmkii.name="AVRISP mkII" avrispmkii.communication="usb" avrispmkii.protocol="stk500v2" avrispmkii.program.protocol="stk500v2" avrispmkii.program.tool="avrdude" avrispmkii.program.extra_params="-Pusb" usbtinyisp.name="USBtinyISP" usbtinyisp.protocol="usbtiny" usbtinyisp.program.tool="avrdude" usbtinyisp.program.extra_params="" arduinoisp.name="ArduinoISP" arduinoisp.protocol="arduinoisp" arduinoisp.program.tool="avrdude" arduinoisp.program.extra_params="" arduinoisporg.name="ArduinoISP.org" arduinoisporg.protocol="arduinoisporg" arduinoisporg.program.tool="avrdude" arduinoisporg.program.extra_params="" usbasp.name="USBasp" usbasp.communication="usb" usbasp.protocol="usbasp" usbasp.program.protocol="usbasp" usbasp.program.tool="avrdude" usbasp.program.extra_params="-Pusb" parallel.name="Parallel Programmer" parallel.protocol="dapa" parallel.force="true" parallel.program.tool="avrdude" parallel.program.extra_params="-F" arduinoasisp.name="Arduino as ISP" arduinoasisp.communication="serial" arduinoasisp.protocol="stk500v1" arduinoasisp.speed="19200" arduinoasisp.program.protocol="stk500v1" arduinoasisp.program.speed="19200" arduinoasisp.program.tool="avrdude" arduinoasisp.program.extra_params="-P{serial.port} -b{program.speed}" arduinoasispatmega32u4.name="Arduino as ISP (ATmega32U4)" arduinoasispatmega32u4.communication="serial" arduinoasispatmega32u4.protocol="arduino" arduinoasispatmega32u4.speed="19200" arduinoasispatmega32u4.program.protocol="arduino" arduinoasispatmega32u4.program.speed="19200" arduinoasispatmega32u4.program.tool="avrdude" arduinoasispatmega32u4.program.extra_params="-P{serial.port} -b{program.speed}" usbGemma.name="Arduino Gemma" usbGemma.protocol="arduinogemma" usbGemma.program.tool="avrdude" usbGemma.program.extra_params="" usbGemma.config.path="{runtime.platform.path}/bootloaders/gemma/avrdude.conf" buspirate.name="BusPirate as ISP" buspirate.communication="serial" buspirate.protocol="buspirate" buspirate.program.protocol="buspirate" buspirate.program.tool="avrdude" buspirate.program.extra_params="-P{serial.port}" stk500.name="Atmel STK500 development board" stk500.communication="serial" stk500.protocol="stk500" stk500.program.protocol="stk500" stk500.program.tool="avrdude" stk500.program.extra_params="-P{serial.port}" jtag3isp.name="Atmel JTAGICE3 (ISP mode)" jtag3isp.communication="usb" jtag3isp.protocol="jtag3isp" jtag3isp.program.protocol="jtag3isp" jtag3isp.program.tool="avrdude" jtag3isp.program.extra_params="" jtag3.name="Atmel JTAGICE3 (JTAG mode)" jtag3.communication="usb" jtag3.protocol="jtag3" jtag3.program.protocol="jtag3" jtag3.program.tool="avrdude" jtag3.program.extra_params="-B0.1" atmel_ice.name="Atmel-ICE (AVR)" atmel_ice.communication="usb" atmel_ice.protocol="atmelice_isp" atmel_ice.program.protocol="atmelice_isp" atmel_ice.program.tool="avrdude" atmel_ice.program.extra_params="-Pusb" preprocessed_file_path="{build.path}/nul" usbtinyisp_slow.name="USBtinyISP slow (MegaCore)" usbtinyisp_slow.protocol="usbtiny" usbtinyisp_slow.program.tool="avrdude" usbtinyisp_slow.program.extra_params="-B32" usbasp_slow.name="USBasp slow (MegaCore)" usbasp_slow.communication="usb" usbasp_slow.protocol="usbasp" usbasp_slow.program.protocol="usbasp" usbasp_slow.program.tool="avrdude" usbasp_slow.program.extra_params="-Pusb -B32" runtime.tools.avrdude.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.0.1-arduino5" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.0.1-arduino5" runtime.tools.arduinoOTA.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.3.0" runtime.tools.arduinoOTA-1.3.0.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\arduinoOTA\1.3.0" runtime.tools.avrdude-6.3.0-arduino17.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avrdude\6.3.0-arduino17" runtime.tools.avr-gcc.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7" runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7" upload.maximum_size="32256" upload.maximum_data_size="2048" bootloader.high_fuses="0xDE" bootloader.extended_fuses="0x05" bootloader.file="optiboot/optiboot_atmega328.hex" build.mcu="atmega328p" runtime.vm.boardinfo.id="Optiboot_optiboot28_atmega328p" runtime.vm.boardinfo.name="Optiboot_optiboot28_atmega328p" runtime.vm.boardinfo.desc="ATmega328p (Optiboot on 28-pin cpus)" runtime.vm.boardinfo.src_location="C:\Users\andre\AppData\Local\arduino15\packages\Optiboot\hardware\avr\0.8.0" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.8.13" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="Arduino.h" ide.exe_name="arduino" ide.recipe.preproc.defines.flags="-w -x c++ -E -dM" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.builder.exe="arduinobuilder.exe" ide.builder.name="Arduino Builder" ide.hosts="atmel" ide.url="https://www.visualmicro.com/page/Download-Arduino-Or-Other-Supporting-IDEs.aspx" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" runtime.tools.vm_web_debugger.path="{vm.platform.root.path}/../../Micro Debuggers/WebDebugger" recipe.hooks.vmdeploy.vm_web_debugger_postupload.1.pattern="&quot;{runtime.tools.vm_web_debugger.path}/DeployMicroWebserver.exe&quot; &quot;{sketch_path}&quot; &quot;{serial.port}&quot; &quot;{runtime.hardware.path}\..&quot;" recipe.hooks.vmlaunch.vm_web_debugger_preopen.1.pattern="notepad.exe &quot;{sketch_path}\__vm\vmWebDebugger\Start-WebServer.bat&quot;" recipe.hooks.vmlaunch.vm_web_debugger_preopen.2.pattern="{sketch_path}\__vm\vmWebDebugger\Start-WebServer.bat" ide.debug_menu.debugger_type="Debug" ide.debug_menu.debugger_type.none="Off" ide.debug_menu.none.debug.tool="no_debug" ide.debug_menu.debugger_type.universal="Serial" ide.debug_menu.universal.debug.tool="auto" ide.debug_menu.debugger_type.hwdebugger="Hardware" ide.debug_menu.hwdebugger="Debugger" ide.debug_menu.hwdebugger.custom_debugger="Manual/Custom" ide.debug_menu.hwdebugger.custom_debugger.debug.tool="dbg_external" ide.meta_custom_debugger.sentence="Provides a build that includes debug defines and will launch a custom debugger if one is provided." ide.meta_custom_debugger.paragraph="This is option is for advanced use. It is recommended that a pre-configured debugger be selected when available in this list. Usage: Optionally add a customer debugger to the project. A 'debugger_launch.json' file shares the same command syntax that is used by the VsCode debugger. Custom debuggers can be targeted at a board and/or variant and/or configuration name. IE: [variant].[configuration_name][.]debugger_launch.json" ide.meta_custom_debugger.reference.usage.url="https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md#customlaunchsetupcommands" ide.meta_custom_debugger.reference.connect.url="https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019" ide.debug_menu.vm_disable_optimization="Disable Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_default="Default Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj="No Project  Optimization" ide.debug_menu.vm_disable_opt_proj.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj_libs="No Project + Libraries Optimization" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_all="No Optimization" ide.meta_vm_disable_opt_all.sentence="Disable compiler optimization for all sources:- Project, Library and Platform." ide.meta_vm_disable_opt_all.comment="After switching between 'No Optimization' and other optimization values, please click &quot;Solution Clean&quot; or switch off (or cycle) 'vMicro&gt;Compiler&gt;Shared Cache For Cores'. NOTE: Changing optimization settings can cause build errors or result in overly large programs." ide.debug_menu.vm_disable_opt_all.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_core="{ide.compiler_flags_no_opt}" ide.appid="arduino16x" location.sketchbook="C:\Users\andre\OneDrive\Documents\Arduino" build.core.vmresolved="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\cores\arduino" build.core.parentfolder.vmresolved="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\cores" build.core.coresparentfolder.vmresolved="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3" build.core.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\andre\AppData\Local\arduino15\packages\Optiboot\hardware\avr\0.8.0" runtime.platform.path="C:\Users\andre\AppData\Local\arduino15\packages\Optiboot\hardware\avr\0.8.0" vm.platformname.name="avr" build.arch="AVR" vm.runtime.compiler.cached_cores_path="C:\Users\andre\AppData\Local\Temp\VMBCore\arduino16x" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.showwarnings_core="false" vm.runtime.compiler.showwarnings_library="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" runtime.vm.ide.platforms.path="c:\program files (x86)\microsoft visual studio\2019\community\common7\ide\extensions\ze3s3dil.pco\Micro Platforms" runtime.vm.ide.tools.openocd.path="{runtime.tools.openocd-0.9.0.path}" runtime.vm.openocd.path="{runtime.tools.openocd-0.9.0.path}" vm.runtime.build.intermediate_output_path="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Boiler_control\Debug\" vm.runtime.build.final_output_path="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Debug\" compiler.always_include_sketchfolder="true" compiler.always_include_sharedprojectfolders="true" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.auto_discover_includes_shallow="true" vm.runtime.compiler.allow_library_debugging="false" vm.sketch_ino_cpp_name="Boiler_control.cpp" serial.port.file="COM5" serial.port="COM5" serial.port.num="5" port.caption="COM5   - Arduino Uno" Caption="Arduino Uno (COM5)" ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" CompatibleID.value0="USB\Class_02" ConfigManagerErrorCode="0" ConfigManagerUserConfig="False" CreationClassName="Win32_PnPEntity" Description="Arduino Uno" DeviceID="USB\VID_2341&amp;PID_0043\A4132373935351A01252" HardwareID.value0="USB\VID_2341&amp;PID_0043" Manufacturer="Arduino LLC (www.arduino.cc)" Name="Arduino Uno (COM5)" PNPClass="Ports" PNPDeviceID="USB\VID_2341&amp;PID_0043\A4132373935351A01252" Present="True" Service="usbser" Status="OK" SystemCreationClassName="Win32_ComputerSystem" SystemName="XPS15-ANDREW" vid="0x2341" pid="0x0043" vidpid="23410043" vid_pid="0x2341_0x0043" iserial="A4132373935351A01252" extra.time.local="1606411096" extra.time.utc="1606411096" extra.time.dst="0" extra.time.zone="0" serial.port.caption="COM5   - Arduino Uno" serial.Caption="Arduino Uno (COM5)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_02" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="Arduino Uno" serial.DeviceID="USB\VID_2341&amp;PID_0043\A4132373935351A01252" serial.HardwareID.value0="USB\VID_2341&amp;PID_0043" serial.Manufacturer="Arduino LLC (www.arduino.cc)" serial.Name="Arduino Uno (COM5)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_2341&amp;PID_0043\A4132373935351A01252" serial.Present="True" serial.Service="usbser" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="XPS15-ANDREW" serial.vid="0x2341" serial.pid="0x0043" serial.vidpid="23410043" serial.vid_pid="0x2341_0x0043" serial.iserial="A4132373935351A01252" serial.port.iserial="A4132373935351A01252" build.project_name="Boiler_control.ino" build.project_path="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Boiler_control" sketch_path="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Boiler_control" ProjectDir="C:\Users\andre\OneDrive\Documents\Arduino\Home Automation\Boiler_control\" build.path="C:\Users\andre\AppData\Local\Temp\VMBuilds\Boiler_control\Optiboot_optiboot28_atmega328p\Debug" debug.tool="auto" vm.runtime.compile.skip_library_file_if_exists_in_project="false" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\andre\AppData\Local\Temp\VMBuilds\Boiler_control\Optiboot_optiboot28_atmega328p\Debug" build.architecture="7.3.0-atmel3.6.1-arduino7" vmresolved.compiler.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\bin\" vmresolved.tools.path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7" build.variant.vmresolved.name="arduino:standard" build.variant.vmresolved.full_path="C:\Users\andre\AppData\Local\arduino15\packages\arduino\hardware\avr\1.8.3\variants\standard" />
    </Platform>
    <Debug DebugEnabled="1" EnableBreak="1" InBreakLiveView="1" PerfStats="1" IsGdb="0" RuntimeWriterMissingSetup="0" RuntimeWriterMissingLoop="0" RemotePortSpeedWrittenToDebugSource="115200" RuntimeWriterFoundSetupStart="1" RuntimeWriterFoundLoopStart="1" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="Zone_control_basement.ino, line 420" Id="4fca3d7c-78cd-4d6e-9ffa-38af1734fe23" Enabled="1" Message="{response} {sendBuffer} {recvBuffer}" MessageTextType="2" PreProcessedMessage="{0} {1} {2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\andre\onedrive\documents\arduino\home automation\zone_control_basement\zone_control_basement.ino" FileLine="420" FileColumn="1" FunctionName="checkErrors()" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='4fca3d7c-78cd-4d6e-9ffa-38af1734fe23'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>413			char sendBuffer[] = "SE";
414			int response;
415			const byte BUFLEN = 32;
416			char recvBuffer[BUFLEN];
417			memset(recvBuffer, 0x00, BUFLEN);
418			
419			response = boilerI2C(sendBuffer, 2, recvBuffer, BUFLEN);
--&gt;420	
421			if (!((recvBuffer[0] == 'O') &amp;&amp; (recvBuffer[1] == 'K'))) {
422					SENDLOG('W', "Boiler errs: ", recvBuffer);   // Boiler is reporting an error
423			}
424	
425			RESTORE_CONTEXT
426	}
427	
428	void checkPressure() {					// Read primary circuit pressure &amp; display
429		SAVE_CONTEXT("cPres")
</Source>
        <MessageVariables>
          <MessageVariable Name="response" Index="1" />
          <MessageVariable Name="sendBuffer" Index="2" />
          <MessageVariable Name="recvBuffer" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="HA_temperature.cpp, line 168" Id="28d762a4-57d9-4536-a315-a5783ec0c8fa" Enabled="1" Message="Reset sensor {sensorID}" MessageTextType="0" PreProcessedMessage="Reset sensor {0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\andre\onedrive\documents\arduino\libraries\ha_temperature\ha_temperature.cpp" FileLine="168" FileColumn="1" FunctionName="scheduleTempC(byte sensorID)" FunctionLineOffset="18" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='28d762a4-57d9-4536-a315-a5783ec0c8fa'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>161	    */
162	
163	    // Select appropriate stage of processing depending on how far through the read process has got
164	    switch (getState(sensorID)) {
165	
166	        case RESET_SENSOR:                    // Initial state
167	
--&gt;168	            // Bail if sensor already in use
169	            if (!reserveBus(sensorID)) return;
170	
171	            // Reset bus and start conversion
172	            oneWire[sensorID].reset();
173	            oneWire[sensorID].skip();
174	            oneWire[sensorID].write(STARTCONVO);
175	
176	            // Next step will be to read the result . . .
177	            setState(sensorID, GET_TEMP);
</Source>
        <MessageVariables>
          <MessageVariable Name="sensorID" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="HA_temperature.cpp, line 247" Id="5f8a9dea-e9c1-40d2-be04-c32899ec6dd6" Enabled="1" Message="Bus block" MessageTextType="0" PreProcessedMessage="Bus block" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\andre\onedrive\documents\arduino\libraries\ha_temperature\ha_temperature.cpp" FileLine="247" FileColumn="1" FunctionName="reserveBus(byte sensorID)" FunctionLineOffset="14" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='5f8a9dea-e9c1-40d2-be04-c32899ec6dd6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>240	    if (s_sensorInUse &amp; _BV(sensorID)) {
241	        interrupts();
242	        return false;
243	    }
244	    else {
245	        s_sensorInUse |= _BV(sensorID);          // Reserve access to the sensor - calling routine must release
246	        interrupts();
--&gt;247	
248	        return true;
249	    }
250	}
251	
252	void HA_temperature::releaseBus(byte sensorID) {
253	    
254	    // Restore bus access - not atomic, so need to protect from interrupts
255	    
256	    noInterrupts();
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="Boiler_control.ino, line 440" Id="57d46e2b-4f43-4359-9314-3cce9c080179" Enabled="1" Message="Setup sensors" MessageTextType="0" PreProcessedMessage="Setup sensors" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\andre\onedrive\documents\arduino\home automation\boiler_control\boiler_control.ino" FileLine="440" FileColumn="1" FunctionName="setupSensors()" FunctionLineOffset="5" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='57d46e2b-4f43-4359-9314-3cce9c080179'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>433	    Wire.onReceive(processOnReceive);             // Sets incomingI2C TRUE if data sent by Basement controller
434	}
435	
436	void setupSensors() {
437	
438	    // Initialise wakeup to support background daemons for reading temperature sensors
439	    wakeup.init();
--&gt;440	
441	    // Initialise sensors and start regular background refresh - access latest temperature using getTempC()
442	    for (int i = 0; i &lt; NUM_SENSORS; i++) {
443	        if (!sensor[i].init(SENSOR_PIN[i], TARGET_PRECISION, CHECK_FREQ[i])) {
444	            logError(0xA1);
445	        }
446	    }
447	    somethingWrong = 0;
448	}
449	
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="Boiler_control.ino, line 447" Id="80bb048b-53eb-46a7-bea3-c2fb84d45532" Enabled="1" Message="Done" MessageTextType="0" PreProcessedMessage="Done" Condition="" ConditionType="1" CurrentHits="0" File="c:\users\andre\onedrive\documents\arduino\home automation\boiler_control\boiler_control.ino" FileLine="447" FileColumn="1" FunctionName="setupSensors()" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='80bb048b-53eb-46a7-bea3-c2fb84d45532'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>440	
441	    // Initialise sensors and start regular background refresh - access latest temperature using getTempC()
442	    for (int i = 0; i &lt; NUM_SENSORS; i++) {
443	        if (!sensor[i].init(SENSOR_PIN[i], TARGET_PRECISION, CHECK_FREQ[i])) {
444	            logError(0xA1);
445	        }
446	    }
--&gt;447	    somethingWrong = 0;
448	}
449	
450	void setupRelays() {
451	
452	    // Setup relay pins/driver
453	    pinMode(LATCH_PIN, OUTPUT);
454	    pinMode(DATA_PIN, OUTPUT);
455	    pinMode(CLOCK_PIN, OUTPUT);
456	}
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>